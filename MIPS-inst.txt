// MIPS-inst.txt, to be read into memory
//
// Addr Code            Comment
//   0  add $0, $1, $2  # 3 = 1 + 2  initially $1 has 1, $2 has 2)
//   1  sub $3, $0, $1  # 2 = 3 - 1
//   2  lw  $2, 1($3)   # $2 = mem[word 3], ffffffff
//   3  or  $1, $2, $3  # ffffffff = ffffffff or 3
//   4  and $1, $2, $3  # 2 = ffffffff and 2
//   5  sw  $1, 0($0)   # mem[word 3] = 2
//   6  beq $1, $3, 20  # PC = 27 = 20 + 7 (current PC)
//
000001_00001_00010_00000_xxxxxxxxxxx // let "add" opcdoe be 1, then $1 (RS), $2 (RT), $0 (RD)
000010_00000_00001_00011_xxxxxxxxxxx // let "sub" opcdoe be 2, then $0 (RS), $1 (RT), $3 (RD)
000101_00011_00010_0000000000000001  // let "lw"  opcdoe be 5, then $3 (RS), $2 (RT), imm_value
000011_00010_00011_00001_xxxxxxxxxxx // let "or"  opcdoe be 3, then $2 (RS), $3 (RT), $1 (RD)
000100_00010_00011_00001_xxxxxxxxxxx // let "and" opcdoe be 4, then $2 (RS), $3 (RT), $1 (RD)
000110_00000_00001_0000000000000000  // let "sw"  opcdoe be 6, then $0 (RS), $1 (RT), imm_value
000111_00001_00011_0000000000010100  // let "beq" opcdoe be 7, then $1 (RS), $0 (RT), imm_value
0
0
0
0
0
0
0
0
0
